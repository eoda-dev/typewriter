% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/derive-model.R
\name{model_from_template}
\alias{model_from_template}
\title{Create a model factory function from a template object}
\usage{
model_from_template(
  template,
  use_defaults = FALSE,
  use_length = FALSE,
  optional = FALSE
)
}
\arguments{
\item{template}{A template list to derive model from.}

\item{use_defaults}{Whether to use template values as default values.}

\item{use_length}{\strong{not used} at the moment}

\item{optional}{Logical whether all or no variable is optional. Alternative a vector of names of values that are optional.}
}
\value{
A model factory function.
}
\description{
Create a model factory function from a template object
}
\examples{
template <- list(
  a = 10L,
  b = 10L
)


my_model <- model_from_template(template)
# Succeeds
my_model(a = c(1:10), b = 7L)

# Fails
try(my_model(10, 8))


# Set values to optional
my_model <- model_from_template(template, optional = TRUE)
my_model(a = 12L) # returns NA for b

# When optional is set to FALSE the model throws an error
my_model <- model_from_template(template, optional = FALSE)
try(my_model(a = 12L)) # returns NA for b


# Use defaults if none provided
my_model <- model_from_template(template, use_defaults = TRUE, optional = FALSE)
my_model(a = 12L)

}
