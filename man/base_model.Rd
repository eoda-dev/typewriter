% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/base-model.R
\name{base_model}
\alias{base_model}
\title{Create a model factory function}
\usage{
base_model(
  fields = list(),
  ...,
  .model_config = model_config(),
  .model_pre_init = NULL,
  .model_post_init = NULL,
  .validators_before = list(),
  .validators_after = list()
)
}
\arguments{
\item{fields}{A named list of field definitions.}

\item{...}{Named arguments of field definitions.
Normally either \code{fields} or \code{...} is supplied.}

\item{.model_config}{See \code{\link[=model_config]{model_config()}}.}

\item{.model_pre_init}{A callback function that is executed before the type checks.}

\item{.model_post_init}{A callback function that is executed after the type checks.}

\item{.validators_before}{A named list of field validators
that are executed before the type checks.}

\item{.validators_after}{A named list of field validators
that are executed after the type checks.}
}
\value{
A model factory function.
}
\description{
Create a model factory function
}
\examples{
# ---
# Models
my_model <- base_model(
  a = is.integer,
  b = is.integer,
  txt = is.character
)

# Succeeds
my_model(a = 1L, b = 2L, txt = "My awesome model")

# Fails
try(my_model(a = 1, b = 2L, txt = "My awesome model"))

# ---
# Functions
f <- function(a, b) {
  check_args(a = is.integer, b = is.integer)
  a + b
}

# Succeeds
f(4L, 5L)

# Fails
try(f(4, 5))

# ---
# Data frames
df <- data.frame(
  id = 1:2,
  name = c("Donald", "Lee"),
  surname = c("Byrd", "Morgan")
)

df_model <- base_model(
  id = is.integer,
  name = is.character,
  surname = is.character,
  full_name = is.character,
  .model_pre_init = function(obj) {
    obj$full_name <- paste(obj$name, obj$surname)
    return(obj)
  }
)

# Succeeds
df_model(.x = df)

# Fails
df$id <- NULL
try(df_model(.x = df))
}
